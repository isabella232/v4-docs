"use strict";(self.webpackChunkpooltogether=self.webpackChunkpooltogether||[]).push([[792],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return u}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),o=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=o(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),k=o(a),u=r,c=k["".concat(p,".").concat(u)]||k[u]||s[u]||l;return a?n.createElement(c,i(i({ref:t},m),{},{components:a})):n.createElement(c,i({ref:t},m))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=k;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d.mdxType="string"==typeof e?e:r,i[1]=d;for(var o=2;o<l;o++)i[o]=a[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},3320:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return d},contentTitle:function(){return p},metadata:function(){return o},toc:function(){return m},default:function(){return k}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=["components"],d={},p=void 0,o={unversionedId:"reference/contracts/Ticket",id:"reference/contracts/Ticket",isDocsHomePage:!1,title:"Ticket",description:"Functions",source:"@site/docs/reference/contracts/Ticket.md",sourceDirName:"reference/contracts",slug:"/reference/contracts/Ticket",permalink:"/protocol/reference/contracts/Ticket",editUrl:"https://github.com/pooltogether/v4-docs/tree/main/docs/reference/contracts/Ticket.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"PrizeSplitStrategy",permalink:"/protocol/reference/contracts/PrizeSplitStrategy"},next:{title:"TsunamiDrawCalculator",permalink:"/protocol/reference/contracts/TsunamiDrawCalculator"}},m=[{value:"Functions",id:"functions",children:[{value:"initialize",id:"initialize",children:[]},{value:"getAccountDetails",id:"getaccountdetails",children:[]},{value:"getTwab",id:"gettwab",children:[]},{value:"getBalanceAt",id:"getbalanceat",children:[]},{value:"getAverageBalanceBetween",id:"getaveragebalancebetween",children:[]},{value:"getBalancesAt",id:"getbalancesat",children:[]},{value:"getTotalSupply",id:"gettotalsupply",children:[]},{value:"getTotalSupplies",id:"gettotalsupplies",children:[]},{value:"delegateOf",id:"delegateof",children:[]},{value:"decimals",id:"decimals",children:[]},{value:"balanceOf",id:"balanceof",children:[]},{value:"totalSupply",id:"totalsupply",children:[]},{value:"delegate",id:"delegate",children:[]},{value:"controllerMint",id:"controllermint",children:[]},{value:"controllerBurn",id:"controllerburn",children:[]},{value:"controllerBurnFrom",id:"controllerburnfrom",children:[]},{value:"controller",id:"controller",children:[]},{value:"permit",id:"permit",children:[]},{value:"nonces",id:"nonces",children:[]},{value:"DOMAIN_SEPARATOR",id:"domain_separator",children:[]},{value:"name",id:"name",children:[]},{value:"symbol",id:"symbol",children:[]},{value:"transfer",id:"transfer",children:[]},{value:"allowance",id:"allowance",children:[]},{value:"approve",id:"approve",children:[]},{value:"transferFrom",id:"transferfrom",children:[]},{value:"increaseAllowance",id:"increaseallowance",children:[]},{value:"decreaseAllowance",id:"decreaseallowance",children:[]}]},{value:"Events",id:"events",children:[{value:"Delegated",id:"delegated",children:[]},{value:"TicketInitialized",id:"ticketinitialized",children:[]},{value:"NewUserTwab",id:"newusertwab",children:[]},{value:"NewTotalSupplyTwab",id:"newtotalsupplytwab",children:[]},{value:"Initialized",id:"initialized",children:[]},{value:"Transfer",id:"transfer-1",children:[]},{value:"Approval",id:"approval",children:[]}]}],s={toc:m};function k(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("h3",{id:"initialize"},"initialize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function initialize(\n    string _name,\n    string _symbol,\n    uint8 decimals_\n  ) public\n")),(0,l.kt)("p",null,"Initializes Ticket with passed parameters."),(0,l.kt)("h4",{id:"parameters"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_name")),(0,l.kt)("td",{parentName:"tr",align:"left"},"string"),(0,l.kt)("td",{parentName:"tr",align:"left"},"ERC20 ticket token name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_symbol")),(0,l.kt)("td",{parentName:"tr",align:"left"},"string"),(0,l.kt)("td",{parentName:"tr",align:"left"},"ERC20 ticket token symbol.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"decimals_")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint8"),(0,l.kt)("td",{parentName:"tr",align:"left"},"ERC20 ticket token decimals.")))),(0,l.kt)("h3",{id:"getaccountdetails"},"getAccountDetails"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getAccountDetails(\n    address _user\n  ) external returns (struct Ticket.AccountDetails)\n")),(0,l.kt)("p",null,"Gets a users twap context.  This is a struct with their balance, next twab index, and cardinality."),(0,l.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_user")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The user for whom to fetch the TWAB context")))),(0,l.kt)("h4",{id:"return-values"},"Return Values:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"The")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TWAB context, which includes { balance, nextTwabIndex, cardinality }")))),(0,l.kt)("h3",{id:"gettwab"},"getTwab"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getTwab(\n    address _user,\n    uint16 _index\n  ) external returns (struct TwabLibrary.Twab)\n")),(0,l.kt)("p",null,"Gets the TWAB at a specific index for a user."),(0,l.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_user")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The user for whom to fetch the TWAB")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_index")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint16"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The index of the TWAB to fetch")))),(0,l.kt)("h4",{id:"return-values-1"},"Return Values:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"The")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TWAB, which includes the twab amount and the timestamp.")))),(0,l.kt)("h3",{id:"getbalanceat"},"getBalanceAt"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getBalanceAt(\n    address _user,\n    uint256 _target\n  ) external returns (uint256)\n")),(0,l.kt)("p",null,"Retrieves ",(0,l.kt)("inlineCode",{parentName:"p"},"_user")," TWAB balance."),(0,l.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_user")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Address of the user whose TWAB is being fetched.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_target")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Timestamp at which the reserved TWAB should be for.")))),(0,l.kt)("h3",{id:"getaveragebalancebetween"},"getAverageBalanceBetween"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getAverageBalanceBetween(\n    address _user,\n    uint256 _startTime,\n    uint256 _endTime\n  ) external returns (uint256)\n")),(0,l.kt)("p",null,"Calculates the average balance held by a user for a given time frame."),(0,l.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_user")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The user whose balance is checked")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_startTime")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The start time of the time frame.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_endTime")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The end time of the time frame.")))),(0,l.kt)("h4",{id:"return-values-2"},"Return Values:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"The")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"average balance that the user held during the time frame.")))),(0,l.kt)("h3",{id:"getbalancesat"},"getBalancesAt"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getBalancesAt(\n    address _user,\n    uint32[] _targets\n  ) external returns (uint256[])\n")),(0,l.kt)("p",null,"Retrieves ",(0,l.kt)("inlineCode",{parentName:"p"},"_user")," TWAB balances."),(0,l.kt)("h4",{id:"parameters-5"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_user")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Address of the user whose TWABs are being fetched.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_targets")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint32[]"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Timestamps at which the reserved TWABs should be for.")))),(0,l.kt)("h4",{id:"return-values-3"},"Return Values:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"TWAB")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"balances.")))),(0,l.kt)("h3",{id:"gettotalsupply"},"getTotalSupply"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getTotalSupply(\n    uint32 _target\n  ) external returns (uint256)\n")),(0,l.kt)("p",null,"Retrieves ticket TWAB ",(0,l.kt)("inlineCode",{parentName:"p"},"totalSupply"),"."),(0,l.kt)("h4",{id:"parameters-6"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_target")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint32"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Timestamp at which the reserved TWAB should be for.")))),(0,l.kt)("h3",{id:"gettotalsupplies"},"getTotalSupplies"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getTotalSupplies(\n    uint32[] _targets\n  ) external returns (uint256[])\n")),(0,l.kt)("p",null,"Retrieves ticket TWAB ",(0,l.kt)("inlineCode",{parentName:"p"},"totalSupplies"),"."),(0,l.kt)("h4",{id:"parameters-7"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_targets")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint32[]"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Timestamps at which the reserved TWABs should be for.")))),(0,l.kt)("h4",{id:"return-values-4"},"Return Values:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"ticket")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint32[]"),(0,l.kt)("td",{parentName:"tr",align:"left"},"TWAB ",(0,l.kt)("inlineCode",{parentName:"td"},"totalSupplies"),".")))),(0,l.kt)("h3",{id:"delegateof"},"delegateOf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function delegateOf(\n  ) external returns (address)\n")),(0,l.kt)("h3",{id:"decimals"},"decimals"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function decimals(\n  ) public returns (uint8)\n")),(0,l.kt)("p",null,"Returns the ERC20 ticket token decimals."),(0,l.kt)("p",null,"This value should be equal to the decimals of the token used to deposit into the pool."),(0,l.kt)("h4",{id:"return-values-5"},"Return Values:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"uint8")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"decimals.")))),(0,l.kt)("h3",{id:"balanceof"},"balanceOf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function balanceOf(\n  ) public returns (uint256)\n")),(0,l.kt)("p",null,"Returns the ERC20 ticket token balance of a ticket holder."),(0,l.kt)("h4",{id:"return-values-6"},"Return Values:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"uint224")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_user")," ticket token balance.")))),(0,l.kt)("h3",{id:"totalsupply"},"totalSupply"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function totalSupply(\n  ) public returns (uint256)\n")),(0,l.kt)("p",null,"Returns the ERC20 ticket token total supply."),(0,l.kt)("h4",{id:"return-values-7"},"Return Values:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"uint256")),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Total supply of the ERC20 ticket token.")))),(0,l.kt)("h3",{id:"delegate"},"delegate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function delegate(\n  ) external\n")),(0,l.kt)("h3",{id:"controllermint"},"controllerMint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function controllerMint(\n    address _user,\n    uint256 _amount\n  ) external\n")),(0,l.kt)("p",null,"Allows the controller to mint tokens for a user account"),(0,l.kt)("p",null,"May be overridden to provide more granular control over minting"),(0,l.kt)("h4",{id:"parameters-8"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_user")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Address of the receiver of the minted tokens")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_amount")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Amount of tokens to mint")))),(0,l.kt)("h3",{id:"controllerburn"},"controllerBurn"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function controllerBurn(\n    address _user,\n    uint256 _amount\n  ) external\n")),(0,l.kt)("p",null,"Allows the controller to burn tokens from a user account"),(0,l.kt)("p",null,"May be overridden to provide more granular control over burning"),(0,l.kt)("h4",{id:"parameters-9"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_user")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Address of the holder account to burn tokens from")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_amount")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Amount of tokens to burn")))),(0,l.kt)("h3",{id:"controllerburnfrom"},"controllerBurnFrom"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function controllerBurnFrom(\n    address _operator,\n    address _user,\n    uint256 _amount\n  ) external\n")),(0,l.kt)("p",null,"Allows an operator via the controller to burn tokens on behalf of a user account"),(0,l.kt)("p",null,"May be overridden to provide more granular control over operator-burning"),(0,l.kt)("h4",{id:"parameters-10"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_operator")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Address of the operator performing the burn action via the controller contract")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_user")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Address of the holder account to burn tokens from")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"_amount")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Amount of tokens to burn")))),(0,l.kt)("h3",{id:"controller"},"controller"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function controller(\n  ) external returns (address)\n")),(0,l.kt)("p",null,"Interface to the contract responsible for controlling mint/burn"),(0,l.kt)("h3",{id:"permit"},"permit"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function permit(\n  ) public\n")),(0,l.kt)("p",null,"See {IERC20Permit-permit}."),(0,l.kt)("h3",{id:"nonces"},"nonces"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function nonces(\n  ) public returns (uint256)\n")),(0,l.kt)("p",null,"See {IERC20Permit-nonces}."),(0,l.kt)("h3",{id:"domain_separator"},"DOMAIN_SEPARATOR"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function DOMAIN_SEPARATOR(\n  ) external returns (bytes32)\n")),(0,l.kt)("p",null,"See {IERC20Permit-DOMAIN_SEPARATOR}."),(0,l.kt)("h3",{id:"name"},"name"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function name(\n  ) public returns (string)\n")),(0,l.kt)("p",null,"Returns the name of the token."),(0,l.kt)("h3",{id:"symbol"},"symbol"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function symbol(\n  ) public returns (string)\n")),(0,l.kt)("p",null,"Returns the symbol of the token, usually a shorter version of the\nname."),(0,l.kt)("h3",{id:"transfer"},"transfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function transfer(\n  ) public returns (bool)\n")),(0,l.kt)("p",null,"See {IERC20-transfer}.\nRequirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"recipient")," cannot be the zero address."),(0,l.kt)("li",{parentName:"ul"},"the caller must have a balance of at least ",(0,l.kt)("inlineCode",{parentName:"li"},"amount"),".")),(0,l.kt)("h3",{id:"allowance"},"allowance"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function allowance(\n  ) public returns (uint256)\n")),(0,l.kt)("p",null,"See {IERC20-allowance}."),(0,l.kt)("h3",{id:"approve"},"approve"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function approve(\n  ) public returns (bool)\n")),(0,l.kt)("p",null,"See {IERC20-approve}.\nRequirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spender")," cannot be the zero address.")),(0,l.kt)("h3",{id:"transferfrom"},"transferFrom"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function transferFrom(\n  ) public returns (bool)\n")),(0,l.kt)("p",null,"See {IERC20-transferFrom}.\nEmits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ERC20}.\nRequirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"sender")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"recipient")," cannot be the zero address."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"sender")," must have a balance of at least ",(0,l.kt)("inlineCode",{parentName:"li"},"amount"),"."),(0,l.kt)("li",{parentName:"ul"},"the caller must have allowance for ",(0,l.kt)("inlineCode",{parentName:"li"},"sender"),"'s tokens of at least\n",(0,l.kt)("inlineCode",{parentName:"li"},"amount"),".")),(0,l.kt)("h3",{id:"increaseallowance"},"increaseAllowance"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function increaseAllowance(\n  ) public returns (bool)\n")),(0,l.kt)("p",null,"Atomically increases the allowance granted to ",(0,l.kt)("inlineCode",{parentName:"p"},"spender")," by the caller.\nThis is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\nEmits an {Approval} event indicating the updated allowance.\nRequirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spender")," cannot be the zero address.")),(0,l.kt)("h3",{id:"decreaseallowance"},"decreaseAllowance"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function decreaseAllowance(\n  ) public returns (bool)\n")),(0,l.kt)("p",null,"Atomically decreases the allowance granted to ",(0,l.kt)("inlineCode",{parentName:"p"},"spender")," by the caller.\nThis is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\nEmits an {Approval} event indicating the updated allowance.\nRequirements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spender")," cannot be the zero address."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spender")," must have allowance for the caller of at least\n",(0,l.kt)("inlineCode",{parentName:"li"},"subtractedValue"),".")),(0,l.kt)("h2",{id:"events"},"Events"),(0,l.kt)("h3",{id:"delegated"},"Delegated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  event Delegated(\n  )\n")),(0,l.kt)("h3",{id:"ticketinitialized"},"TicketInitialized"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  event TicketInitialized(\n    string name,\n    string symbol,\n    uint8 decimals,\n    address controller\n  )\n")),(0,l.kt)("p",null,"Emitted when ticket is initialized."),(0,l.kt)("h4",{id:"parameters-11"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"name")),(0,l.kt)("td",{parentName:"tr",align:"left"},"string"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Ticket name (eg: PoolTogether Dai Ticket (Compound)).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"symbol")),(0,l.kt)("td",{parentName:"tr",align:"left"},"string"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Ticket symbol (eg: PcDAI).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"decimals")),(0,l.kt)("td",{parentName:"tr",align:"left"},"uint8"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Ticket decimals.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"controller")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Token controller address.")))),(0,l.kt)("h3",{id:"newusertwab"},"NewUserTwab"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  event NewUserTwab(\n    address ticketHolder,\n    address user,\n    struct TwabLibrary.Twab newTwab\n  )\n")),(0,l.kt)("p",null,"Emitted when a new TWAB has been recorded."),(0,l.kt)("h4",{id:"parameters-12"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"ticketHolder")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The Ticket holder address.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"user")),(0,l.kt)("td",{parentName:"tr",align:"left"},"address"),(0,l.kt)("td",{parentName:"tr",align:"left"},"The recipient of the ticket power (may be the same as the ticketHolder)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"newTwab")),(0,l.kt)("td",{parentName:"tr",align:"left"},"struct TwabLibrary.Twab"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Updated TWAB of a ticket holder after a successful TWAB recording.")))),(0,l.kt)("h3",{id:"newtotalsupplytwab"},"NewTotalSupplyTwab"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  event NewTotalSupplyTwab(\n    struct TwabLibrary.Twab newTotalSupplyTwab\n  )\n")),(0,l.kt)("p",null,"Emitted when a new total supply TWAB has been recorded."),(0,l.kt)("h4",{id:"parameters-13"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"newTotalSupplyTwab")),(0,l.kt)("td",{parentName:"tr",align:"left"},"struct TwabLibrary.Twab"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Updated TWAB of tickets total supply after a successful total supply TWAB recording.")))),(0,l.kt)("h3",{id:"initialized"},"Initialized"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  event Initialized(\n  )\n")),(0,l.kt)("p",null,"Emitted when an instance is initialized"),(0,l.kt)("h3",{id:"transfer-1"},"Transfer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  event Transfer(\n  )\n")),(0,l.kt)("p",null,"Emitted when ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," tokens are moved from one account (",(0,l.kt)("inlineCode",{parentName:"p"},"from"),") to\nanother (",(0,l.kt)("inlineCode",{parentName:"p"},"to"),").\nNote that ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," may be zero."),(0,l.kt)("h3",{id:"approval"},"Approval"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  event Approval(\n  )\n")),(0,l.kt)("p",null,"Emitted when the allowance of a ",(0,l.kt)("inlineCode",{parentName:"p"},"spender")," for an ",(0,l.kt)("inlineCode",{parentName:"p"},"owner")," is set by\na call to {approve}. ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," is the new allowance."))}k.isMDXComponent=!0}}]);